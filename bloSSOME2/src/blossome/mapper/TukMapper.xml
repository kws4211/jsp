<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="blossom.mapper.TukMapper">
	
	<!-- 내가 툭 리스트 -->
	<select id="mytukList" parameterType="hashMap" resultType="blossome.vo.TukVO">
		select b.*, m.*, am.* 
		from BLO_CHOICE b, BLO_MEMBER m, BLO_ADDMEMBER am 
		where b.mem_id=#{id} and b.CHOICE_ID=m.MEM_ID and b.CHOICE_ID=am.MEM_ID and CHOICE_STATE in (1, 2)
		ORDER BY CHOICE_NUM desc
	</select>
	
	<!-- 나를 툭 리스트 -->
	<select id="metukList" parameterType="hashMap" resultType="blossome.vo.TukVO">
		select b.*, m.*, am.* 
		from BLO_CHOICE b, BLO_MEMBER m, BLO_ADDMEMBER am 
		where b.CHOICE_ID=#{id} and b.mem_ID=m.MEM_ID and b.mem_ID=am.MEM_ID and CHOICE_STATE in (1, 2)
		ORDER BY CHOICE_NUM desc
	</select>
	
	<!-- 나를 툭한 리스트에서 툭하기  -->	
	<insert id="tukInsert" parameterType="blossome.vo.TukVO">
		INSERT INTO BLO_CHOICE
		VALUES (#{choiceNum}, #{memId}, #{choiceId}, sysdate, 1)
	</insert>

	<!-- 내가 툭한 리스트에서 툭 취소 -->
	<delete id="tukDelete" parameterType="hashMap">
		delete from BLO_CHOICE where CHOICE_NUM=#{choiceN}
	</delete>
	
	<!-- 게시판 시퀀스 추가 -->
	<select id="selectTukSeq" resultType="String">
  	 SELECT tuk_seq.nextval as tuk_seq FROM dual
	</select>
	
	<!-- 내가 꾹 리스트 -->
	<select id="mygguckList" parameterType="hashMap" resultType="blossome.vo.TukVO">
		select b.*, m.*, am.* 
		from BLO_CHOICE b, BLO_MEMBER m, BLO_ADDMEMBER am 
		where b.mem_id=#{id} and b.CHOICE_STATE=2 and b.CHOICE_ID=m.MEM_ID and b.CHOICE_ID=am.MEM_ID
		ORDER BY CHOICE_NUM desc
	</select>
	
	<!-- 나를 꾹 리스트 -->
	<select id="megguckList" parameterType="hashMap" resultType="blossome.vo.TukVO">
		select b.*, m.*, am.* 
		from BLO_CHOICE b, BLO_MEMBER m, BLO_ADDMEMBER am 
		where b.choice_id=#{id} and b.CHOICE_STATE=2 and b.mem_ID=m.MEM_ID and b.mem_ID=am.MEM_ID
		ORDER BY CHOICE_NUM desc
	</select>
	
	<!-- 꾸욱취소 -->
	<update id="gguckDelete">
		update BLO_CHOICE
		set CHOICE_STATE=1
		where CHOICE_NUM=#{choiceN}
	</update>
	
	<!-- 차단하기 -->
	<update id="gguckBlock">
		update BLO_CHOICE
		set CHOICE_STATE=0
		where CHOICE_NUM=#{choiceN}
	</update>
	
	<!-- 꾸욱 매칭 -->
	<update id="gguckUpdate">
		update BLO_CHOICE
		set CHOICE_STATE=4
		where CHOICE_NUM=#{choiceN}
	</update>
	
	
	<update id="gguckChange" parameterType="hashMap">
		update BLO_CHOICE
		set CHOICE_STATE=2
		where mem_id=#{memid} and choice_id=#{choId}
	</update>
	
	<!--  insert여부(1이면 있음 0이면 없음) -->
	<select id="seekMyInfo" resultType="int">
		select count(*)
		from blo_choice
		where mem_id = #{memId} and choice_id = #{choiceId}
	</select>

	<!--  없을떄 insert -->
	<insert id="gguckInsert">
		INSERT INTO BLO_CHOICE
		VALUES ( #{choiceNum}, #{memId}, #{choiceId}, sysdate, 4 )
	</insert>
	
	<update id="gguckUpdateMatching" parameterType="hashMap">
		update BLO_CHOICE
		set CHOICE_STATE=4
		where mem_id=#{memid} and choice_id=#{choId}
	</update>
	
	<update id="gguckUpdateMatching2" parameterType="hashMap">
		update BLO_CHOICE
		set CHOICE_STATE=4
		where mem_id=#{choId} and choice_id=#{memid}
	</update>
	
</mapper>
